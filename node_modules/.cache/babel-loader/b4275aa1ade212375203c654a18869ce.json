{"ast":null,"code":"import { get, post } from \"../../Utility/Services/httpInterceptor\";\nimport store from \"../index\";\nexport const getItems = () => {\n  return dispatch => get(`/items`).then(res => {\n    dispatch({\n      type: \"item-list\",\n      payload: {\n        items: res.data\n      }\n    });\n    console.log(\"getItems\", res);\n    return res;\n  });\n};\nexport const getItemById = id => {\n  return dispatch => {\n    const selectedItem = store.getState().itemsList.items.filter(res => res.id == id);\n    console.log(\"selectedItem\", selectedItem);\n    dispatch({\n      type: \"item-select\",\n      payload: {\n        itemselectedItem: selectedItem[0]\n      }\n    });\n  };\n};\nexport const postItemUpdateById = obj => {\n  return dispatch => {\n    const itemList = [];\n    store.getState().itemsList.items.map((res, index) => {\n      if (res.id === obj.id) {\n        itemList[index] = obj;\n      } else {\n        itemList[index] = res;\n      }\n    });\n    console.log(\"Object Data\", itemList);\n    dispatch({\n      type: \"item-list\",\n      payload: {\n        items: itemList\n      }\n    });\n  };\n};\nexport const postItemDeleteById = id => {\n  return dispatch => {\n    const itemList = [];\n    store.getState().itemsList.items.map((res, index) => {\n      if (res.id !== id) {\n        itemList.push(res);\n      }\n    });\n    dispatch({\n      type: \"item-list\",\n      payload: {\n        items: itemList\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/home/bacancy/Desktop/valtech/valtech/src/Redux/Action/index.js"],"names":["get","post","store","getItems","dispatch","then","res","type","payload","items","data","console","log","getItemById","id","selectedItem","getState","itemsList","filter","itemselectedItem","postItemUpdateById","obj","itemList","map","index","postItemDeleteById","push"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,QAA0B,wCAA1B;AAEA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAC5B,SAAQC,QAAD,IACLJ,GAAG,CAAE,QAAF,CAAH,CAAcK,IAAd,CAAoBC,GAAD,IAAS;AAC1BF,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE,WAAR;AAAqBC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,KAAK,EAAEH,GAAG,CAACI;AAAb;AAA9B,KAAD,CAAR;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBN,GAAxB;AACA,WAAOA,GAAP;AACD,GAJD,CADF;AAMD,CAPM;AASP,OAAO,MAAMO,WAAW,GAAIC,EAAD,IAAQ;AACjC,SAAQV,QAAD,IAAc;AACnB,UAAMW,YAAY,GAAGb,KAAK,CACvBc,QADkB,GAElBC,SAFkB,CAERR,KAFQ,CAEFS,MAFE,CAEMZ,GAAD,IAASA,GAAG,CAACQ,EAAJ,IAAUA,EAFxB,CAArB;AAGAH,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BG,YAA5B;AACAX,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE,aADC;AAEPC,MAAAA,OAAO,EAAE;AAAEW,QAAAA,gBAAgB,EAAEJ,YAAY,CAAC,CAAD;AAAhC;AAFF,KAAD,CAAR;AAID,GATD;AAUD,CAXM;AAaP,OAAO,MAAMK,kBAAkB,GAAIC,GAAD,IAAS;AACzC,SAAQjB,QAAD,IAAc;AACnB,UAAMkB,QAAQ,GAAG,EAAjB;AACApB,IAAAA,KAAK,CAACc,QAAN,GAAiBC,SAAjB,CAA2BR,KAA3B,CAAiCc,GAAjC,CAAqC,CAACjB,GAAD,EAAMkB,KAAN,KAAgB;AACnD,UAAIlB,GAAG,CAACQ,EAAJ,KAAWO,GAAG,CAACP,EAAnB,EAAuB;AACrBQ,QAAAA,QAAQ,CAACE,KAAD,CAAR,GAAgBH,GAAhB;AACD,OAFD,MAEO;AACLC,QAAAA,QAAQ,CAACE,KAAD,CAAR,GAAgBlB,GAAhB;AACD;AACF,KAND;AAOFK,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0BU,QAA1B;AACElB,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE,WADC;AAEPC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,KAAK,EAAEa;AAAT;AAFF,KAAD,CAAR;AAKD,GAfD;AAgBD,CAjBM;AAmBP,OAAO,MAAMG,kBAAkB,GAAIX,EAAD,IAAQ;AACtC,SAAQV,QAAD,IAAc;AACnB,UAAMkB,QAAQ,GAAG,EAAjB;AACApB,IAAAA,KAAK,CAACc,QAAN,GAAiBC,SAAjB,CAA2BR,KAA3B,CAAiCc,GAAjC,CAAqC,CAACjB,GAAD,EAAMkB,KAAN,KAAgB;AACnD,UAAIlB,GAAG,CAACQ,EAAJ,KAAWA,EAAf,EAAmB;AACjBQ,QAAAA,QAAQ,CAACI,IAAT,CAAcpB,GAAd;AACD;AACF,KAJD;AAKAF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE,WADC;AAEPC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,KAAK,EAAEa;AAAT;AAFF,KAAD,CAAR;AAKD,GAZD;AAaD,CAdI","sourcesContent":["import { get, post } from \"../../Utility/Services/httpInterceptor\";\n\nimport store from \"../index\";\nexport const getItems = () => {\n  return (dispatch) =>\n    get(`/items`).then((res) => {\n      dispatch({ type: \"item-list\", payload: { items: res.data } });\n      console.log(\"getItems\", res);\n      return res;\n    });\n};\n\nexport const getItemById = (id) => {\n  return (dispatch) => {\n    const selectedItem = store\n      .getState()\n      .itemsList.items.filter((res) => res.id == id);\n    console.log(\"selectedItem\", selectedItem);\n    dispatch({\n      type: \"item-select\",\n      payload: { itemselectedItem: selectedItem[0] },\n    });\n  };\n};\n\nexport const postItemUpdateById = (obj) => {\n  return (dispatch) => {\n    const itemList = [];\n    store.getState().itemsList.items.map((res, index) => {\n      if (res.id === obj.id) {\n        itemList[index]=obj\n      } else {\n        itemList[index]=res;\n      }\n    });\n  console.log(\"Object Data\",itemList)\n    dispatch({\n      type: \"item-list\",\n      payload: { items: itemList },\n    });\n  \n  };\n};\n\nexport const postItemDeleteById = (id) => {\n    return (dispatch) => {\n      const itemList = [];\n      store.getState().itemsList.items.map((res, index) => {\n        if (res.id !== id) {\n          itemList.push(res)\n        }\n      });\n      dispatch({\n        type: \"item-list\",\n        payload: { items: itemList },\n      });\n    \n    };\n  };\n"]},"metadata":{},"sourceType":"module"}