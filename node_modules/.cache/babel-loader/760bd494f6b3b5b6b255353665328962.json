{"ast":null,"code":"import axios from \"axios\";\nimport { API_URL } from \"../Config\";\nimport { getToken, getServerValidation } from \"../Helper\";\nimport { te } from \"../ReduxToaster\";\nexport const get = (url, isPrivate = true, responseType = null, customUrl = false, headers) => {\n  let apiUrl = API_URL + url;\n\n  if (customUrl) {\n    apiUrl = url;\n  }\n\n  if (isPrivate && getToken()) {\n    const isParam = apiUrl.includes(\"?\");\n    if (isParam) apiUrl = `${apiUrl}&&api_token=${getToken()}`;else apiUrl = `${apiUrl}?api_token=${getToken()}`;\n  }\n\n  const axiosObj = {\n    method: \"get\",\n    url: apiUrl\n  };\n\n  if (headers) {\n    axiosObj.headers = headers;\n  }\n\n  if (responseType) axiosObj.responseType = responseType;\n  return axios(axiosObj).then(response => handleResponse(response)).catch(error => handleError(error));\n};\nexport const post = (url, bodyObj = {}, isPrivate = true, mediaFile = false, uat = false) => {\n  const apiUrl = !uat ? API_URL + url : url;\n\n  if (isPrivate && getToken()) {\n    if (bodyObj instanceof FormData) bodyObj.append(\"api_token\", getToken());else bodyObj.api_token = getToken();\n  }\n\n  if (mediaFile == true) {\n    let formData = new FormData();\n    Object.keys(bodyObj).map(key => {\n      formData.append(key, bodyObj[key]);\n    });\n    bodyObj = formData;\n  }\n\n  return axios.post(apiUrl, bodyObj).then(response => handleResponse(response)).catch(error => handleError(error));\n};\n\nconst handleResponse = response => {\n  return {\n    error: false,\n    data: response.data\n  };\n};\n\nconst handleError = error => {\n  const {\n    response\n  } = error;\n  let errorMsg = \"Sorry, something went wrong. Please try again.\";\n\n  if (response && response.status === 422) {\n    // handle server validation\n    if (response.data && response.data.errors) errorMsg = getServerValidation(response.data.errors) || errorMsg;else if (response.data.message) errorMsg = response.data.message;\n  } else if (response && response.status == 401) {\n    // Unauthorized\n    let element = document.getElementById(\"unauthorized-box\");\n\n    if (element) {\n      element.style.display = \"block\";\n      errorMsg = null;\n    }\n  }\n\n  console.log(\"API ERROR ::: \", JSON.stringify(response));\n\n  if (errorMsg) {\n    te(errorMsg);\n  }\n\n  return {\n    error: true,\n    message: response ? response.data.message : null,\n    status: response ? response.status : null\n  };\n};","map":{"version":3,"sources":["/home/bacancy/Desktop/valtech/SSR-React/src/Utility/Services/httpInterceptor.js"],"names":["axios","API_URL","getToken","getServerValidation","te","get","url","isPrivate","responseType","customUrl","headers","apiUrl","isParam","includes","axiosObj","method","then","response","handleResponse","catch","error","handleError","post","bodyObj","mediaFile","uat","FormData","append","api_token","formData","Object","keys","map","key","data","errorMsg","status","errors","message","element","document","getElementById","style","display","console","log","JSON","stringify"],"mappings":"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","sourcesContent":["\nimport axios from \"axios\";\nimport { API_URL } from \"../Config\";\nimport { getToken, getServerValidation } from \"../Helper\";\nimport { te } from \"../ReduxToaster\";\nexport const get = (\n  url,\n  isPrivate = true,\n  responseType = null,\n  customUrl = false,\n  headers\n) => {\n  let apiUrl = API_URL + url;\n  if (customUrl) {\n    apiUrl = url;\n  }\n  if (isPrivate && getToken()) {\n    const isParam = apiUrl.includes(\"?\");\n    if (isParam) apiUrl = `${apiUrl}&&api_token=${getToken()}`;\n    else apiUrl = `${apiUrl}?api_token=${getToken()}`;\n  }\n  const axiosObj = {\n    method: \"get\",\n    url: apiUrl\n  };\n  if (headers) {\n    axiosObj.headers = headers;\n  }\n  if (responseType) axiosObj.responseType = responseType;\n  return axios(axiosObj)\n    .then(response => handleResponse(response))\n    .catch(error => handleError(error));\n};\nexport const post = (\n  url,\n  bodyObj = {},\n  isPrivate = true,\n  mediaFile = false,\n  uat = false\n) => {\n  const apiUrl = !uat ? API_URL + url : url;\n\n  if (isPrivate && getToken()) {\n    if (bodyObj instanceof FormData) bodyObj.append(\"api_token\", getToken());\n    else bodyObj.api_token = getToken();\n  }\n  if (mediaFile == true) {\n    let formData = new FormData();\n    Object.keys(bodyObj).map(key => {\n      formData.append(key, bodyObj[key]);\n    });\n    bodyObj = formData;\n  }\n  return axios\n    .post(apiUrl, bodyObj)\n    .then(response => handleResponse(response))\n    .catch(error => handleError(error));\n};\nconst handleResponse = response => {\n  return {\n    error: false,\n    data: response.data\n  };\n};\nconst handleError = error => {\n  const { response } = error;\n  let errorMsg = \"Sorry, something went wrong. Please try again.\";\n  if (response && response.status === 422) {\n    // handle server validation\n    if (response.data && response.data.errors)\n      errorMsg = getServerValidation(response.data.errors) || errorMsg;\n    else if (response.data.message) errorMsg = response.data.message;\n  } else if (response && response.status == 401) {\n    // Unauthorized\n    let element = document.getElementById(\"unauthorized-box\");\n    if (element) {\n      element.style.display = \"block\";\n      errorMsg = null;\n    }\n  }\n  console.log(\"API ERROR ::: \", JSON.stringify(response));\n  if (errorMsg) {\n    te(errorMsg);\n  }\n  return {\n    error: true,\n    message: response ? response.data.message : null,\n    status: response ? response.status : null\n  };\n};\n\n"]},"metadata":{},"sourceType":"module"}