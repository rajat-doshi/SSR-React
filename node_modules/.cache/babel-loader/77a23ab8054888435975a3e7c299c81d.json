{"ast":null,"code":"import{get,post}from\"../../Utility/Services/httpInterceptor\";import store from\"../index\";export var getItems=function getItems(){return function(dispatch){return get(\"/items\").then(function(res){dispatch({type:\"item-list\",payload:{items:res.data}});console.log(\"getItems\",res);return res;});};};export var getItemById=function getItemById(id){return function(dispatch){var selectedItem=store.getState().itemsList.items.filter(function(res){return res.id==id;});console.log(\"selectedItem\",selectedItem);dispatch({type:\"item-select\",payload:{itemselectedItem:selectedItem[0]}});};};export var postItemUpdateById=function postItemUpdateById(obj){return function(dispatch){var itemList=[];store.getState().itemsList.items.map(function(res,index){if(res.id===obj.id){itemList[index]=obj;}else{itemList[index]=res;}});console.log(\"Object Data\",itemList);dispatch({type:\"item-list\",payload:{items:itemList}});};};export var postItemDeleteById=function postItemDeleteById(id){return function(dispatch){var itemList=[];store.getState().itemsList.items.map(function(res,index){if(res.id!==id){itemList.push(res);}});dispatch({type:\"item-list\",payload:{items:itemList}});};};","map":{"version":3,"sources":["/home/bacancy/Desktop/valtech/SSR-React/src/Redux/Action/index.js"],"names":["get","post","store","getItems","dispatch","then","res","type","payload","items","data","console","log","getItemById","id","selectedItem","getState","itemsList","filter","itemselectedItem","postItemUpdateById","obj","itemList","map","index","postItemDeleteById","push"],"mappings":"AAAA,OAASA,GAAT,CAAcC,IAAd,KAA0B,wCAA1B,CAEA,MAAOC,CAAAA,KAAP,KAAkB,UAAlB,CACA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CAC5B,MAAO,UAACC,QAAD,QACLJ,CAAAA,GAAG,UAAH,CAAcK,IAAd,CAAmB,SAACC,GAAD,CAAS,CAC1BF,QAAQ,CAAC,CAAEG,IAAI,CAAE,WAAR,CAAqBC,OAAO,CAAE,CAAEC,KAAK,CAAEH,GAAG,CAACI,IAAb,CAA9B,CAAD,CAAR,CACAC,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAwBN,GAAxB,EACA,MAAOA,CAAAA,GAAP,CACD,CAJD,CADK,EAAP,CAMD,CAPM,CASP,MAAO,IAAMO,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,EAAD,CAAQ,CACjC,MAAO,UAACV,QAAD,CAAc,CACnB,GAAMW,CAAAA,YAAY,CAAGb,KAAK,CACvBc,QADkB,GAElBC,SAFkB,CAERR,KAFQ,CAEFS,MAFE,CAEK,SAACZ,GAAD,QAASA,CAAAA,GAAG,CAACQ,EAAJ,EAAUA,EAAnB,EAFL,CAArB,CAGAH,OAAO,CAACC,GAAR,CAAY,cAAZ,CAA4BG,YAA5B,EACAX,QAAQ,CAAC,CACPG,IAAI,CAAE,aADC,CAEPC,OAAO,CAAE,CAAEW,gBAAgB,CAAEJ,YAAY,CAAC,CAAD,CAAhC,CAFF,CAAD,CAAR,CAID,CATD,CAUD,CAXM,CAaP,MAAO,IAAMK,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,GAAD,CAAS,CACzC,MAAO,UAACjB,QAAD,CAAc,CACnB,GAAMkB,CAAAA,QAAQ,CAAG,EAAjB,CACApB,KAAK,CAACc,QAAN,GAAiBC,SAAjB,CAA2BR,KAA3B,CAAiCc,GAAjC,CAAqC,SAACjB,GAAD,CAAMkB,KAAN,CAAgB,CACnD,GAAIlB,GAAG,CAACQ,EAAJ,GAAWO,GAAG,CAACP,EAAnB,CAAuB,CACrBQ,QAAQ,CAACE,KAAD,CAAR,CAAgBH,GAAhB,CACD,CAFD,IAEO,CACLC,QAAQ,CAACE,KAAD,CAAR,CAAgBlB,GAAhB,CACD,CACF,CAND,EAOFK,OAAO,CAACC,GAAR,CAAY,aAAZ,CAA0BU,QAA1B,EACElB,QAAQ,CAAC,CACPG,IAAI,CAAE,WADC,CAEPC,OAAO,CAAE,CAAEC,KAAK,CAAEa,QAAT,CAFF,CAAD,CAAR,CAKD,CAfD,CAgBD,CAjBM,CAmBP,MAAO,IAAMG,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACX,EAAD,CAAQ,CACtC,MAAO,UAACV,QAAD,CAAc,CACnB,GAAMkB,CAAAA,QAAQ,CAAG,EAAjB,CACApB,KAAK,CAACc,QAAN,GAAiBC,SAAjB,CAA2BR,KAA3B,CAAiCc,GAAjC,CAAqC,SAACjB,GAAD,CAAMkB,KAAN,CAAgB,CACnD,GAAIlB,GAAG,CAACQ,EAAJ,GAAWA,EAAf,CAAmB,CACjBQ,QAAQ,CAACI,IAAT,CAAcpB,GAAd,EACD,CACF,CAJD,EAKAF,QAAQ,CAAC,CACPG,IAAI,CAAE,WADC,CAEPC,OAAO,CAAE,CAAEC,KAAK,CAAEa,QAAT,CAFF,CAAD,CAAR,CAKD,CAZD,CAaD,CAdI","sourcesContent":["import { get, post } from \"../../Utility/Services/httpInterceptor\";\n\nimport store from \"../index\";\nexport const getItems = () => {\n  return (dispatch) =>\n    get(`/items`).then((res) => {\n      dispatch({ type: \"item-list\", payload: { items: res.data } });\n      console.log(\"getItems\", res);\n      return res;\n    });\n};\n\nexport const getItemById = (id) => {\n  return (dispatch) => {\n    const selectedItem = store\n      .getState()\n      .itemsList.items.filter((res) => res.id == id);\n    console.log(\"selectedItem\", selectedItem);\n    dispatch({\n      type: \"item-select\",\n      payload: { itemselectedItem: selectedItem[0] },\n    });\n  };\n};\n\nexport const postItemUpdateById = (obj) => {\n  return (dispatch) => {\n    const itemList = [];\n    store.getState().itemsList.items.map((res, index) => {\n      if (res.id === obj.id) {\n        itemList[index]=obj\n      } else {\n        itemList[index]=res;\n      }\n    });\n  console.log(\"Object Data\",itemList)\n    dispatch({\n      type: \"item-list\",\n      payload: { items: itemList },\n    });\n  \n  };\n};\n\nexport const postItemDeleteById = (id) => {\n    return (dispatch) => {\n      const itemList = [];\n      store.getState().itemsList.items.map((res, index) => {\n        if (res.id !== id) {\n          itemList.push(res)\n        }\n      });\n      dispatch({\n        type: \"item-list\",\n        payload: { items: itemList },\n      });\n    \n    };\n  };\n"]},"metadata":{},"sourceType":"module"}