{"ast":null,"code":"import { cloneDeep } from \"lodash\";\nimport moment from \"moment\";\nimport axios from \"axios\"; // get token of loggedIn user\n\nexport const getToken = () => {\n  return localStorage.getItem(\"api_token\");\n}; // get regexp by type\n\nexport const getRegExp = type => {\n  let regx = null;\n\n  switch (type) {\n    case \"number\":\n      regx = /^[0-9]*$/;\n      break;\n\n    case \"email\":\n      regx = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@(([[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      break;\n\n    case \"mobile10\":\n      regx = /^[7896]\\d{9}$/;\n      break;\n\n    case \"mobile14\":\n      regx = /^(?=.*[0-9])[- +()0-9]{10,14}$/;\n      break;\n\n    case \"mobile\":\n      regx = /^((\\(\\d{3}\\) ?)|(\\d{3}-))?\\d{3}-\\d{4}$/;\n      break;\n\n    case \"number\":\n      regx = /^[0-9]*$/;\n      break;\n\n    case \"floatNumber\":\n      regx = /^((\\+|-)?(0|([1-9][0-9]*))(\\.[0-9][0-9])?)$/;\n      break;\n\n    case \"url\":\n      regx = /^(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:/?#[\\]@!\\$&'\\(\\)\\*\\+,;=.]+$/;\n      break;\n\n    case \"cvv\":\n      regx = /^[0-9]{3,4}$/;\n      break;\n\n    case \"expiryDate\":\n      regx = /(0[1-9]|10|11|12)\\/[0-9]{2}|\\./;\n      break;\n\n    case \"latitude\":\n      regx = /^(\\+|-)?((\\d((\\.)|\\.\\d{1,6})?)|(0*?[0-8]\\d((\\.)|\\.\\d{1,6})?)|(0*?90((\\.)|\\.0{1,6})?))$/;\n      break;\n\n    case \"longitude\":\n      regx = /^(\\+|-)?((\\d((\\.)|\\.\\d{1,6})?)|(0*?\\d\\d((\\.)|\\.\\d{1,6})?)|(0*?1[0-7]\\d((\\.)|\\.\\d{1,6})?)|(0*?180((\\.)|\\.0{1,6})?))$/;\n      break;\n\n    case \"promoCode\":\n      regx = /^([a-zA-Z0-9]{1,15})$/;\n      break;\n\n    case \"Amount\":\n      regx = /^\\d*\\.?\\d*$/;\n      break;\n\n    case \"Percentage\":\n      regx = /^\\d{0,2}(\\.\\d{1,4})?$/;\n      break;\n\n    case \"password\":\n      regx = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}$/;\n      break;\n\n    case \"onlyAlphbate\":\n      regx = /^[a-zA-Z ]*$/;\n      break;\n\n    case \"alphaNumeric\":\n      regx = /^([a-zA-Z0-9 _-]+)$/;\n      break;\n\n    case \"tanNumber\":\n      regx = /^([A-Z]){4}([0-9]){5}([A-Z]){1}?$/;\n      return regx;\n      break;\n\n    case \"IFSCCode\":\n      regx = /^[A-Z]{4}0[0-9]{6}$/;\n      break;\n\n    case \"address\":\n      regx = /^[a-zA-Z0-9\\s,.'-]{3,}$/;\n      break;\n\n    case \"onlyCharacter\":\n      regx = /^[a-zA-Z\\s]*$/;\n      break;\n\n    case \"URL\":\n      regx = /[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)?/gi;\n      break;\n\n    default:\n      break;\n  }\n\n  return regx;\n}; // get object of state form\n\nexport const getFormDetails = (form, changeValidation) => {\n  let failed;\n\n  for (let val in form.errors) {\n    const fieldError = form.errors[val];\n\n    if (fieldError) {\n      failed = true;\n    } else if (fieldError === null && !form[val]) {\n      failed = true;\n      changeValidation(val, true);\n    }\n  }\n\n  if (failed) {\n    return false;\n  } else {\n    const cloneObj = cloneDeep(form);\n    delete cloneObj[\"errors\"];\n    return cloneObj;\n  }\n};\nexport const getServerValidation = errorObj => {\n  let messages = [];\n  Object.keys(errorObj).map(val => {\n    errorObj[val].map(arr_val => messages.push(arr_val));\n  });\n  return messages.join(\",\");\n};","map":{"version":3,"sources":["/home/bacancy/Desktop/valtech/valtech/src/Utility/Helper.js"],"names":["cloneDeep","moment","axios","getToken","localStorage","getItem","getRegExp","type","regx","getFormDetails","form","changeValidation","failed","val","errors","fieldError","cloneObj","getServerValidation","errorObj","messages","Object","keys","map","arr_val","push","join"],"mappings":"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","sourcesContent":["import { cloneDeep } from \"lodash\";\nimport moment from \"moment\";\nimport axios from \"axios\";\n// get token of loggedIn user\nexport const getToken = () => {\n  return localStorage.getItem(\"api_token\");\n};\n\n// get regexp by type\nexport const getRegExp = (type) => {\n  let regx = null;\n  switch (type) {\n    case \"number\":\n      regx = /^[0-9]*$/;\n      break;\n    case \"email\":\n      regx = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@(([[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      break;\n    case \"mobile10\":\n      regx = /^[7896]\\d{9}$/;\n      break;\n    case \"mobile14\":\n      regx = /^(?=.*[0-9])[- +()0-9]{10,14}$/;\n      break;\n    case \"mobile\":\n      regx = /^((\\(\\d{3}\\) ?)|(\\d{3}-))?\\d{3}-\\d{4}$/;\n      break;\n    case \"number\":\n      regx = /^[0-9]*$/;\n      break;\n    case \"floatNumber\":\n      regx = /^((\\+|-)?(0|([1-9][0-9]*))(\\.[0-9][0-9])?)$/;\n      break;\n    case \"url\":\n      regx = /^(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:/?#[\\]@!\\$&'\\(\\)\\*\\+,;=.]+$/;\n      break;\n    case \"cvv\":\n      regx = /^[0-9]{3,4}$/;\n      break;\n    case \"expiryDate\":\n      regx = /(0[1-9]|10|11|12)\\/[0-9]{2}|\\./;\n      break;\n    case \"latitude\":\n      regx = /^(\\+|-)?((\\d((\\.)|\\.\\d{1,6})?)|(0*?[0-8]\\d((\\.)|\\.\\d{1,6})?)|(0*?90((\\.)|\\.0{1,6})?))$/;\n      break;\n    case \"longitude\":\n      regx = /^(\\+|-)?((\\d((\\.)|\\.\\d{1,6})?)|(0*?\\d\\d((\\.)|\\.\\d{1,6})?)|(0*?1[0-7]\\d((\\.)|\\.\\d{1,6})?)|(0*?180((\\.)|\\.0{1,6})?))$/;\n      break;\n    case \"promoCode\":\n      regx = /^([a-zA-Z0-9]{1,15})$/;\n      break;\n    case \"Amount\":\n      regx = /^\\d*\\.?\\d*$/;\n      break;\n    case \"Percentage\":\n      regx = /^\\d{0,2}(\\.\\d{1,4})?$/;\n      break;\n    case \"password\":\n      regx = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}$/;\n      break;\n    case \"onlyAlphbate\":\n      regx = /^[a-zA-Z ]*$/;\n      break;\n    case \"alphaNumeric\":\n      regx = /^([a-zA-Z0-9 _-]+)$/;\n      break;\n    case \"tanNumber\":\n      regx = /^([A-Z]){4}([0-9]){5}([A-Z]){1}?$/;\n      return regx;\n      break;\n    case \"IFSCCode\":\n      regx = /^[A-Z]{4}0[0-9]{6}$/;\n      break;\n    case \"address\":\n      regx = /^[a-zA-Z0-9\\s,.'-]{3,}$/;\n      break;\n    case \"onlyCharacter\":\n      regx = /^[a-zA-Z\\s]*$/;\n      break;\n    case \"URL\":\n      regx = /[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)?/gi;\n      break;\n    default:\n      break;\n  }\n  return regx;\n};\n\n// get object of state form\nexport const getFormDetails = (form, changeValidation) => {\n  let failed;\n  for (let val in form.errors) {\n    const fieldError = form.errors[val];\n    if (fieldError) {\n      failed = true;\n    } else if (fieldError === null && !form[val]) {\n      failed = true;\n      changeValidation(val, true);\n    }\n  }\n  if (failed) {\n    return false;\n  } else {\n    const cloneObj = cloneDeep(form);\n    delete cloneObj[\"errors\"];\n    return cloneObj;\n  }\n};\n\nexport const getServerValidation = (errorObj) => {\n  let messages = [];\n  Object.keys(errorObj).map((val) => {\n    errorObj[val].map((arr_val) => messages.push(arr_val));\n  });\n  return messages.join(\",\");\n};\n"]},"metadata":{},"sourceType":"module"}